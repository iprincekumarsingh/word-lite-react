{"version":3,"sources":["components/ErrorMsg.js","components/Navbar.js","components/TextForm.js","App.js","index.js"],"names":["Success","usersuccesmsg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Error","usermsg","error","Navbar","id","className","onClick","document","body","classList","toggle","htmlFor","contains","type","TextForm","useState","getText","GetText","setProgress","color","onLoaderFinished","onChange","event","getElementById","target","value","cols","rows","length","style","backgroundColor","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.ab64df09.chunk.js","sourcesContent":["\r\nimport { toast } from 'react-toastify';\r\n\r\n const    Error=(usermsg)=>{\r\n     toast.error(usermsg, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n    }\r\n  export  const Success=(usersuccesmsg)=>{\r\n     toast.success(usersuccesmsg, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n    }\r\n     \r\nexport default Error\r\n","import React from 'react'\r\nimport  { Success } from './ErrorMsg'\r\n\r\nconst Navbar = () => {\r\n\r\n     const darkmode = () => {\r\n          var d = document.body.classList.contains(\"dark-mode\")\r\n          if (d === \"dark-mode\") {\r\n          }\r\n          else {\r\n               document.body.classList.toggle(\"dark-mode\")\r\n               Success(\"Theme Changed\")        \r\n            }\r\n\r\n     }\r\n     function blue() {\r\n          document.body.classList.toggle(\"blue\")\r\n     }\r\n     return (\r\n          <div id=\"nav\" className=\"navbar\">\r\n               <div className=\"logo\">\r\n                    <h1>Word - Lite</h1>\r\n               </div>\r\n               <nav>\r\n                    <div className=\"color\">\r\n                         <div onClick={blue} className=\"blue mr-10px\"></div>\r\n                         <div><label className=\"switch\">\r\n                              <label htmlFor=\"\"> </label>\r\n                              <input onClick={darkmode} type=\"checkbox\" />\r\n                              <span className=\"slider round\"> </span>\r\n                         </label></div>\r\n                    </div>\r\n               </nav>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LoadingBar from 'react-top-loading-bar'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Error, { Success } from './ErrorMsg';\r\nconst TextForm = () => {\r\n\r\n     const [getText, GetText] = useState(true)\r\n     const [progress, setProgress] = useState(0)\r\n     let preview = (event) => {\r\n          document.getElementById(\"ptext\")\r\n          GetText(event.target.value)\r\n     }\r\n     const converToUpperCase = () => {\r\n          var checkletter = document.getElementById(\"ptext\").value\r\n          if (checkletter === \"\") {\r\n               document.getElementById(\"activated_btn_Lower\").style.backgroundColor = \"blueviolet\"\r\n               Error(\"Enter any Text to convert UpperCase\")\r\n          }\r\n          else {\r\n               document.getElementById(\"ptext\").classList.toggle(\"upperCase\")\r\n               document.getElementById(\"previewtext\").classList.toggle(\"upperCase\")\r\n               document.getElementById(\"activated_btn_Upper\").classList.toggle(\"active-btn\")\r\n               Success(\"UpperCase is Active\")\r\n          }\r\n     }\r\n     const lCase = () => {\r\n          setProgress(progress + 40)\r\n          var checkletter = document.getElementById(\"ptext\").value\r\n          if (checkletter === \"\") {\r\n               Error(\"Enter any Text\")\r\n\r\n               document.getElementById(\"activated_btn_Lower\").style.backgroundColor = \"blueviolet\"\r\n          }\r\n          else {\r\n               setProgress(progress + 40)\r\n               document.getElementById(\"ptext\").classList.toggle(\"lowerCase\")\r\n               setProgress(progress + 30)\r\n               document.getElementById(\"previewtext\").classList.toggle(\"lowerCase\")\r\n               setProgress(progress + 80)\r\n               document.getElementById(\"activated_btn_Lower\").classList.toggle(\"active-btn\")\r\n               Success(\"UpperCase is Active\")\r\n               setProgress(progress + 100)\r\n\r\n          }\r\n\r\n     }\r\n     const bold = () => {\r\n          var checkletter = document.getElementById(\"ptext\").value\r\n\r\n          if (checkletter === \"\") {\r\n               Error(\"Enter any Text\")\r\n               document.getElementById(\"activated_btn_Lower\").style.backgroundColor = \"blueviolet\"\r\n          }\r\n          else {\r\n               document.getElementById(\"ptext\").classList.toggle(\"boldfont\")\r\n               document.getElementById(\"previewtext\").classList.toggle(\"boldfont\")\r\n               document.getElementById(\"activated_btn_Bold\").classList.toggle(\"active-btn\")\r\n               Success(\"Text converted into Bold\")\r\n          }\r\n     }\r\n     const italic = () => {\r\n          var checkletter = document.getElementById(\"ptext\").value\r\n\r\n          if (checkletter === \"\") {\r\n               Error(\"Enter any Text into Italic\")\r\n               document.getElementById(\"activated_btn_Lower\").style.backgroundColor = \"blueviolet\"\r\n          }\r\n          else {\r\n               document.getElementById(\"ptext\").classList.toggle(\"italicFont\")\r\n               document.getElementById(\"previewtext\").classList.toggle(\"italicFont\")\r\n               document.getElementById(\"activated_btn_Bold\").classList.toggle(\"active-btn\")\r\n               Success(\"Text converted into Italic\")\r\n          }\r\n     }\r\n     const clr = () => {\r\n\r\n          document.getElementById(\"ptext\").value = \"\"\r\n          GetText(\"\")\r\n          Success(\"Text cleared\")\r\n     }\r\n\r\n\r\n     return (\r\n\r\n          <div>\r\n\r\n\r\n               <div id=\"main\">\r\n                   \r\n                    <ToastContainer />\r\n                    <LoadingBar\r\n                         color='#f11946'\r\n                         progress={progress}\r\n                         onLoaderFinished={() => setProgress(0)}\r\n                    />\r\n\r\n                    <h1 className=\"he\">Word-Lite The simpelest way to to all the basics Ms-code features with user freindly ui</h1>\r\n                    <div id=\"textareabox\" className=\"textinput\">\r\n                         <textarea id=\"ptext\" onChange={preview} cols=\"30\"\r\n                              rows=\"10\"></textarea>\r\n                    </div>\r\n                    <div id=\"hide\">\r\n                         <div className=\"preview\">\r\n                              <h1>Preview</h1>\r\n                              <p id=\"previewtext\">{getText}</p>\r\n                         </div>\r\n                         <div className=\"preview\">\r\n                              <h1>Count`s</h1>\r\n                              <p >{getText.length}</p>\r\n                         </div>\r\n                    </div>\r\n                    <div id=\"switch_button\" className=\"switches\">\r\n\r\n                    </div>\r\n               </div>\r\n               <div className=\"button-flex\">\r\n\r\n                    <button className=\"mx-2 my-2 custom-btn \" id=\"activated_btn_Upper\" onClick={converToUpperCase}>UpperCase</button>\r\n                    <button className=\"mx-2 my-2 custom-btn \" id=\"activated_btn_Lower\" onClick={lCase}>Lower Case</button>\r\n                    <button className=\"mx-2 my-2  custom-btn \" id=\"activated_btn_Bold\" onClick={bold}>Bold</button>\r\n                    <button className=\"mx-2 my-2 custom-btn \" id=\"activated_btn_Italic\" onClick={italic}>Italic</button>\r\n                    <button className=\"mx-2 my-2  custom-btn\" id=\"activate_btn_clearText\" onClick={clr}>Clear Text</button>\r\n               </div>\r\n          </div>\r\n\r\n     )\r\n}\r\n\r\nexport default TextForm\r\n","import React from 'react'\r\nimport Navbar from \"./components/Navbar\"\r\nimport \"./components/style.css\"\r\nimport TextForm from './components/TextForm'\r\nconst App = () => {\r\n     return (\r\n          <div>\r\n               <Navbar></Navbar>\r\n               <TextForm></TextForm>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}